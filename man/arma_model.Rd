% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/arma.R
\name{arma_model}
\alias{arma_model}
\title{ARMA model with fixed order}
\usage{
arma_model(p, q, intercept = TRUE, ...)
}
\arguments{
\item{p}{Order of auto-regressive (AR) terms.}

\item{q}{Order of moving-average (MA) terms.}

\item{intercept}{Boolean value whether to include an intercept term (default: 
\code{TRUE}).}

\item{...}{Further arguments used when fitting ARMA model.}
}
\value{
Model definition that can then be insered into \code{\link[caret]{train}}.
}
\description{
Creates an ARMA model that is then fitted to the data as a univariate time series.
If further variables are specified in the model, it also includess exogenous variables. 
The order (p,q) is fixed as specified.
}
\details{
Variable importance metrics return the absolute value of the coefficients
for the exogenous variables (if any).
}
\note{
If one desires an auto-tuning of the best order, then one needs to switch to 
\code{\link{auto_arma_model}}.
}
\examples{
library(caret)

# without exogenous variables

library(forecast)
data(WWWusage) # from package "forecast"
df <- data.frame(y = as.numeric(WWWusage))

lm <- train(y ~ 1, data = df, method = "lm", trControl = trainDirectFit())
summary(lm)

arma <- train(y ~ 1, data = df, method = arma_model(1, 1), trControl = trainDirectFit())
summary(arma)

# with exogenous variables

library(vars)
data(Canada)

arma <- train(x = Canada[, -2], y = Canada[, 2], 
               method = arma_model(2, 0), trControl = trainDirectFit())

summary(arma)
arimaorder(arma$finalModel) # order of best model

predict(arma, Canada[, -2]) # in-sample predictions
RMSE(predict(arma, Canada[, -2]), Canada[, 2]) # in-sample RMSE

absCoef <- varImp(arma, scale = FALSE) # variable importance (= absolute value of coefficient)
absCoef

plot(absCoef)
}

